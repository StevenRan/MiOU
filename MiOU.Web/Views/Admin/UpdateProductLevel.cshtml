@using MiOU.Entities.Beans
@model MiOU.Entities.Beans.BProductLevel
@{
    ViewBag.Title = "新建产品等级";    
    Layout = Request.IsAjaxRequest()?null: "~/Views/Shared/_adminLayout.cshtml";
    List<BVIPLevel> allVips = null;
    if (ViewBag.AllVips != null) {
        allVips = (List<BVIPLevel>)ViewBag.AllVips;
    }
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<h2>@ViewBag.Title</h2>
<hr/>

@using (Html.BeginForm("SaveProductLevel", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "ProductLevelForm" }))
{
    @Html.AntiForgeryToken()
    if (ViewBag.Error != null)
    {
        <div class="form-group" id="submit_message_warn">
            <div class="col-md-offset-1 col-md-7 alert alert-danger fade in">
                <p class="" id="message">@Html.Raw((string)ViewBag.Error)</p>
            </div>
        </div>
    }
    @Html.HiddenFor(model => model.Id)
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control input_reg" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.StartPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.StartPrice, new { htmlAttributes = new { @class = "form-control input_reg" } })
            @Html.ValidationMessageFor(model => model.StartPrice, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EndPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.EndPrice, new { htmlAttributes = new { @class = "form-control input_reg" } })
            @Html.ValidationMessageFor(model => model.EndPrice, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control mTA1" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.RentableVipLevels, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @{ 
                string[] viplevels = null;
                if (Model != null && !string.IsNullOrEmpty(Model.RentableVipLevels)) {
                    viplevels = Model.RentableVipLevels.Split(',');
                }
            }
            @foreach (BVIPLevel vip in allVips)
            {
                bool chked= false;
                if(viplevels!=null)
                {
                    foreach(string l in viplevels)
                    {
                        if (l.Trim() == vip.Id.ToString().Trim()) {
                            chked = true;
                            break;
                        }
                    }
                }
                <div class="checkbox">
                    <input @if (chked) {@Html.Raw("checked") } type="checkbox" class="check-box" id="RentableVipLevels" name="RentableVipLevels" value="@vip.Id" /><label class="control-label perLabel">@Html.Raw(vip.Name)</label>
                </div>              
            }
        </div>
    </div>
    

    <div class="form-group">
        <div class="col-md-offset-2 col-md-8">
            <button id="btn_save_user" type="submit" class="btn btn-warning">
                <span class="glyphicon glyphicon-search"></span> 保存
            </button>           
        </div>
    </div>
}